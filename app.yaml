---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: ecommerce
    service: api-gateway
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: api-gateway
  template:
    metadata:
      labels:
        app: ecommerce
        service: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-api-gateway:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        envFrom:
        - secretRef:
           name: microbs-secrets
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels:
    app: ecommerce
    service: api-gateway
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: api-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: ecommerce
    service: api-gateway
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: api-gateway
  template:
    metadata:
      labels:
        app: ecommerce
        service: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-api-gateway:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        envFrom:
        - secretRef:
            name: microbs-secrets
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels:
    app: ecommerce
    service: api-gateway
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: api-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart
  labels:
    app: ecommerce
    service: cart
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: cart
  template:
    metadata:
      labels:
        app: ecommerce
        service: cart
    spec:
      containers:
      - name: cart
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-cart:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        envFrom:
        - secretRef:
            name: microbs-secrets
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
---
apiVersion: v1
kind: Service
metadata:
  name: cart
  labels:
    app: ecommerce
    service: cart
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: cart
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-data
  labels:
    app: ecommerce
    service: cart-data
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: cart-data
  template:
    metadata:
      labels:
        app: ecommerce
        service: cart-data
    spec:
      subdomain: cart-data
      containers:
      - name: cart-data
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-cart-data:3.4.11-main
        imagePullPolicy: IfNotPresent
        command:
          - "redis-server"
        args:
          - "--dir"
          - "/data"
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
           cpu: 500m
           memory: 128Mi
          requests:
           cpu: 100m
           memory: 64Mi
        envFrom:
        - secretRef:
           name: microbs-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-data-replica
  labels:
    app: ecommerce
    service: cart-data-replica
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: cart-data-replica
  template:
    metadata:
      labels:
        app: ecommerce
        service: cart-data-replica
    spec:
      subdomain: cart-data-replica
      containers:
      - name: cart-data-replica
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-cart-data:3.4.11-main
        imagePullPolicy: IfNotPresent
        command:
          - "redis-server"
        args:
          - "--dir"
          - "/data"
          - "--slaveof"
          - "cart-data.default.svc.cluster.local"
          - "6379"
          - "--protected-mode"
          - "no"
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
           cpu: 500m
           memory: 128Mi
          requests:
           cpu: 100m
           memory: 64Mi
        envFrom:
        - secretRef:
           name: microbs-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: cart-data
  labels:
    app: ecommerce
    service: cart-data
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    service: cart-data
---
apiVersion: v1
kind: Service
metadata:
  name: cart-data-replica
  labels:
    app: ecommerce
    service: cart-data-replica
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    service: cart-data-replica
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout
  labels:
    app: ecommerce
    service: checkout
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: checkout
  template:
    metadata:
      labels:
        app: ecommerce
        service: checkout
    spec:
      containers:
      - name: checkout
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-checkout:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        envFrom:
        - secretRef:
            name: microbs-secrets
        env:
        - name: SERVICE_HOST_API_GATEWAY
          value: api-gateway
        - name: SERVICE_PORT_API_GATEWAY
          value: "80"
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
---
apiVersion: v1
kind: Service
metadata:
  name: checkout
  labels:
    app: ecommerce
    service: checkout
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: checkout
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content
  labels:
    app: ecommerce
    service: content
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: content
  template:
    metadata:
      labels:
        app: ecommerce
        service: content
    spec:
      containers:
      - name: content
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-content:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        envFrom:
        - secretRef:
            name: microbs-secrets
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
---
apiVersion: v1
kind: Service
metadata:
  name: content
  labels:
    app: ecommerce
    service: content
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: content
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  labels:
    app: ecommerce
    service: payment
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: payment
  template:
    metadata:
      labels:
        app: ecommerce
        service: payment
    spec:
      containers:
      - name: payment
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-payment:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
        envFrom:
        - secretRef:
           name: microbs-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    app: ecommerce
    service: payment
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: payment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
  labels:
    app: ecommerce
    service: product
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: product
  template:
    metadata:
      labels:
        app: ecommerce
        service: product
    spec:
      containers:
      - name: product
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-product:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        envFrom:
        - secretRef:
            name: microbs-secrets
        env:
        - name: SERVICE_HOST_PRODUCT_DATA
          value: product-data
        - name: SERVICE_PORT_PRODUCT_DATA
          value: "5432"
        - name: SERVICE_USERNAME_PRODUCT_DATA
          value: user2
        - name: SERVICE_PASSWORD_PRODUCT_DATA
          value: password
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
---
apiVersion: v1
kind: Service
metadata:
  name: product
  labels:
    app: ecommerce
    service: product
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: product
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-data
  labels:
    app: ecommerce
    service: product-data
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: product-data
  template:
    metadata:
      labels:
        app: ecommerce
        service: product-data
    spec:
      containers:
      - name: product-data
        image: gcr.io/solutions-engineering-248511/akc-product-data:3.4.14-amd64
        imagePullPolicy: IfNotPresent
        readinessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              psql --username "$POSTGRES_USER" --dbname "products" -c "SELECT 1"
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        args: 
          - -c
          - max_connections=5
        resources:
          limits:
           cpu: 500m
           memory: 128Mi
          requests:
           cpu: 100m
           memory: 128Mi
        envFrom:
        - secretRef:
            name: microbs-secrets
        env:
        - name: POSTGRES_USER
          value: user1
        - name: POSTGRES_PASSWORD
          value: password
---
apiVersion: v1
kind: Service
metadata:
  name: product-data
  labels:
    app: ecommerce
    service: product-data
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    service: product-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: session-data
  labels:
    app: ecommerce
    service: session-data
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: session-data
  template:
    metadata:
      labels:
        app: ecommerce
        service: session-data
    spec:
      subdomain: session-data
      containers:
      - name: session-data
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-session-data:3.4.11-main
        imagePullPolicy: IfNotPresent
        command:
          - "redis-server"
        args:
          - "--dir"
          - "/data"
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
           cpu: 500m
           memory: 128Mi
          requests:
           cpu: 100m
           memory: 64Mi
        envFrom:
        - secretRef:
           name: microbs-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: session-data-replica
  labels:
    app: ecommerce
    service: session-data-replica
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: session-data-replica
  template:
    metadata:
      labels:
        app: ecommerce
        service: session-data-replica
    spec:
      subdomain: session-data-replica
      containers:
      - name: session-data-replica
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-session-data:3.4.11-main
        imagePullPolicy: IfNotPresent
        command:
          - "redis-server"
        args:
          - "--dir"
          - "/data"
          - "--slaveof"
          - "session-data.default.svc.cluster.local"
          - "6379"
          - "--protected-mode"
          - "no"
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
           cpu: 500m
           memory: 128Mi
          requests:
           cpu: 100m
           memory: 64Mi
        envFrom:
        - secretRef:
           name: microbs-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: session-data
  labels:
    app: ecommerce
    service: session-data
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    service: session-data
---
apiVersion: v1
kind: Service
metadata:
  name: session-data-replica
  labels:
    app: ecommerce
    service: session-data-replica
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    service: session-data-replica
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-gateway
  labels:
    app: ecommerce
    service: web-gateway
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      service: web-gateway
  template:
    metadata:
      labels:
        app: ecommerce
        service: web-gateway
    spec:
      containers:
      - name: web-gateway
        image: gcr.io/solutions-engineering-248511/microbs-ecommerce-web-gateway:3.4.11-main
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        envFrom:
        - secretRef:
            name: microbs-secrets
        env:
        - name: SERVICE_HOST_API_GATEWAY
          value: api-gateway
        - name: SERVICE_PORT_API_GATEWAY
          value: "80"
        - name: SERVICE_HOST_SESSION_DATA
          value: session-data
        - name: SERVICE_PORT_SESSION_DATA
          value: "6379"
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: K8S_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.app=$(K8S_APP),k8s.namespace.name=$(K8S_NAMESPACE_NAME),k8s.node.name=$(K8S_NODE_NAME),k8s.pod.ip=$(K8S_POD_IP),k8s.pod.name=$(K8S_POD_NAME)
---
apiVersion: v1
kind: Service
metadata:
  name: web-gateway
  labels:
    app: ecommerce
    service: web-gateway
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    service: web-gateway
---
apiVersion: v1
kind: Service
metadata:
  name: web-gateway-external
  labels:
    app: ecommerce
spec:
  type: LoadBalancer
  selector:
    service: web-gateway
  ports:
  - name: http
    port: 80
    targetPort: 80
