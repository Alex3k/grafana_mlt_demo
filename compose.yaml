version: '3.4'

# This is a docker-compose file for running the demo locally.
# You must make sure you have following environment variables set:
# - PROMETHEUS_URL
# - PROMETHEUS_USERNAME
# - PROMETHEUS_API_KEY
# - TEMPO_URL
# - TEMPO_USERNAME
# - TEMPO_API_KEY
#
# Then run:
# docker-compose up
# or:
# podman-compose up

services:

  cart:
    build:
      context: src/src
      dockerfile: services/cart/Dockerfile
    environment:
      - SERVICE_NAME=cart
      - OTLP_RECEIVER_HOST=agent
      - OTLP_RECEIVER_PORT=4317

  # Redis
  cart-data:
    build:
      context: src/src
      dockerfile: services/cart-data/Dockerfile

  product:
    build:
      context: src/src
      dockerfile: services/product/Dockerfile
    environment:
      - SERVICE_NAME=product
      - SERVICE_HOST_PRODUCT_DATA=product-data
      - OTLP_RECEIVER_HOST=agent
      - OTLP_RECEIVER_PORT=4317
    depends_on:
      - product-data

  # PostgreSQL
  product-data:
    build:
      context: src/src/services/product-data
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  content:
    build:
      context: src/src
      dockerfile: services/content/Dockerfile
    environment:
      - SERVICE_NAME=content
      - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
      - OTLP_RECEIVER_HOST=agent
      - OTLP_RECEIVER_PORT=4317

  checkout:
    build:
      context: src/src
      dockerfile: services/checkout/Dockerfile
    environment:
      - SERVICE_NAME=checkout
      - SERVICE_HOST_API_GATEWAY=api-gateway
      - SERVICE_PORT_API_GATEWAY=8080
      - OTLP_RECEIVER_HOST=agent
      - OTLP_RECEIVER_PORT=4317

  payment:
    build:
      context: src/src
      dockerfile: services/payment/Dockerfile
    environment:
      - SERVICE_NAME=payment
      - OTLP_RECEIVER_HOST=agent
      - OTLP_RECEIVER_PORT=4317

  api-gateway:
    build:
      context: src/src
      dockerfile: services/api-gateway/Dockerfile
    depends_on:
      - cart
      - cart-data
      - product
      - product-data
      - content
      - checkout
    environment:
      - SERVICE_NAME=api-gateway
      - SERVICE_BIND_PORT=8080
      - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
      - OTLP_RECEIVER_HOST=agent
      - OTLP_RECEIVER_PORT=4317

  web-gateway:
    build:
      context: src/src
      dockerfile: services/web-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - api-gateway
    environment:
      - SERVICE_NAME=web-gateway
      - SERVICE_BIND_PORT=8080
      - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
      - SERVICE_HOST_API_GATEWAY=api-gateway
      - SERVICE_PORT_API_GATEWAY=8080
      - SERVICE_HOST_SESSION_DATA=session-data
      - OTLP_RECEIVER_HOST=agent
      - OTLP_RECEIVER_PORT=4317

  # Another Redis
  session-data:
    build:
      context: src/src
      dockerfile: services/session-data/Dockerfile

  agent:
    image: docker.io/grafana/agent:v0.24.2
    volumes:
      - ./agent-config-local.yaml:/etc/agent-config.yaml:z
    command: 
      - "-config.file=/etc/agent-config.yaml"
      - "-config.expand-env"
    environment:
      - PROMETHEUS_URL=${PROMETHEUS_URL}
      - PROMETHEUS_USERNAME=${PROMETHEUS_USERNAME}
      - PROMETHEUS_API_KEY=${PROMETHEUS_API_KEY}
      - TEMPO_URL=${TEMPO_URL}
      - TEMPO_USERNAME=${TEMPO_USERNAME}
      - TEMPO_API_KEY=${TEMPO_API_KEY}
